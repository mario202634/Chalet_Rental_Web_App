{"ast":null,"code":"var _jsxFileName = \"E:\\\\ICS\\\\Y3\\\\Cloud\\\\frontend\\\\Cloud-Frontend\\\\src\\\\components\\\\products\\\\AddProductForm.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport AuthContext from '../../store/authContext';\nimport FormInputError from '../../UI/form/FormInputError';\nimport SelectInput from '../../UI/form/SelectInput';\nimport TextAreaInput from '../../UI/form/TextAreaInput';\nimport TextInput from '../../UI/form/TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddChaletForm = props => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const authContext = useContext(AuthContext);\n  const governoratesOptions = props.governorates.map(s => {\n    return {\n      name: s.name,\n      value: s._id\n    };\n  });\n  const submitHandler = async formData => {\n    try {\n      const response = await fetch('http://localhost:5000/chalets', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `BEARER ${authContext.token}`\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw Error(data.error);\n      }\n      console.log(data);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"flex  flex-col p-10 gap-5 bg-gray-800 w-fit\",\n    onSubmit: handleSubmit(submitHandler),\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Name\",\n      type: \"name\",\n      name: \"name\",\n      register: register,\n      validation: {\n        required: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), formState.errors.name && /*#__PURE__*/_jsxDEV(FormInputError, {\n      children: \"Chalet name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"E-Mail\",\n      type: \"email\",\n      name: \"email\",\n      register: register,\n      validation: {\n        required: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), formState.errors.name && /*#__PURE__*/_jsxDEV(FormInputError, {\n      children: \"E-Mail must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextAreaInput, {\n      label: \"Address\",\n      name: \"address\",\n      register: register,\n      validation: {\n        required: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), formState.errors.description && /*#__PURE__*/_jsxDEV(FormInputError, {\n      children: \"Chalet description must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Image URL\",\n      type: \"text\",\n      name: \"imgURL\",\n      register: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Price\",\n      type: \"number\",\n      name: \"price\",\n      register: register,\n      validation: {\n        required: true,\n        min: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), formState.errors.price && /*#__PURE__*/_jsxDEV(FormInputError, {\n      children: \"Chalet price must be greater than 0.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n      label: \"Governorate\",\n      name: \"govId\",\n      register: register,\n      validation: {\n        required: true\n      },\n      options: governoratesOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), formState.errors.govId && /*#__PURE__*/_jsxDEV(FormInputError, {\n      children: \"Governorate must not be empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-white rounded-xl my-4 py-2 px-8 self-center\",\n      children: \"Add Chalet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AddChaletForm, \"ps6ojXAK7k2uUvLG3xgHAgl27yg=\", false, function () {\n  return [useForm];\n});\n_c = AddChaletForm;\nexport default AddChaletForm;\nvar _c;\n$RefreshReg$(_c, \"AddChaletForm\");","map":{"version":3,"names":["useContext","useForm","AuthContext","FormInputError","SelectInput","TextAreaInput","TextInput","AddChaletForm","props","register","handleSubmit","formState","authContext","governoratesOptions","governorates","map","s","name","value","_id","submitHandler","formData","response","fetch","method","headers","Authorization","token","body","JSON","stringify","data","json","ok","Error","error","console","log","err","message","required","errors","description","min","price","govId"],"sources":["E:/ICS/Y3/Cloud/frontend/Cloud-Frontend/src/components/products/AddProductForm.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport AuthContext from '../../store/authContext';\r\nimport FormInputError from '../../UI/form/FormInputError';\r\nimport SelectInput from '../../UI/form/SelectInput';\r\nimport TextAreaInput from '../../UI/form/TextAreaInput';\r\nimport TextInput from '../../UI/form/TextInput';\r\n\r\nconst AddChaletForm = (props) => {\r\n  const { register, handleSubmit, formState } = useForm();\r\n\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const governoratesOptions = props.governorates.map((s) => {\r\n    return { name: s.name, value: s._id };\r\n  });\r\n\r\n  const submitHandler = async (formData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/chalets', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `BEARER ${authContext.token}`\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw Error(data.error);\r\n      }\r\n\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"flex  flex-col p-10 gap-5 bg-gray-800 w-fit\"\r\n      onSubmit={handleSubmit(submitHandler)}\r\n    >\r\n      <TextInput\r\n        label=\"Name\"\r\n        type=\"name\"\r\n        name=\"name\"\r\n        register={register}\r\n        validation={{ required: true }}\r\n      />\r\n      {formState.errors.name && (\r\n        <FormInputError>Chalet name must not be empty</FormInputError>\r\n      )}\r\n\r\n    <TextInput\r\n        label=\"E-Mail\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        register={register}\r\n        validation={{ required: true }}\r\n      />\r\n      {formState.errors.name && (\r\n        <FormInputError>E-Mail must not be empty</FormInputError>\r\n      )}\r\n\r\n      <TextAreaInput\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        register={register}\r\n        validation={{ required: true }}\r\n      />\r\n      {formState.errors.description && (\r\n        <FormInputError>Chalet description must not be empty</FormInputError>\r\n      )}\r\n\r\n      {/* <TextAreaInput\r\n        label=\"Description\"\r\n        name=\"description\"\r\n        register={register}\r\n        validation={{ required: true }}\r\n      />\r\n      {formState.errors.description && (\r\n        <FormInputError>Chalet description must not be empty</FormInputError>\r\n      )} */}\r\n\r\n      <TextInput\r\n        label=\"Image URL\"\r\n        type=\"text\"\r\n        name=\"imgURL\"\r\n        register={register}\r\n      />\r\n      \r\n      <TextInput\r\n        label=\"Price\"\r\n        type=\"number\"\r\n        name=\"price\"\r\n        register={register}\r\n        validation={{ required: true, min: 0 }}\r\n      />\r\n      {formState.errors.price && (\r\n        <FormInputError>Chalet price must be greater than 0.</FormInputError>\r\n      )}\r\n\r\n\r\n      <SelectInput\r\n        label=\"Governorate\"\r\n        name=\"govId\"\r\n        register={register}\r\n        validation={{ required: true }}\r\n        options={governoratesOptions}\r\n      />\r\n      {formState.errors.govId && (\r\n        <FormInputError>Governorate must not be empty.</FormInputError>\r\n      )}\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"bg-white rounded-xl my-4 py-2 px-8 self-center\"\r\n      >\r\n        Add Chalet\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddChaletForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}