{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const ChaletPage = () => {\n//   const [chalet, setChalet] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   // use the useParams hook in React Router to allow us to access dynamic segments in our dynamic route\n//   const params = useParams();\n//   // our dynamic segment was called chaletId, so we can access it as follows:\n//   const chaletId = params.chaletId;\n\n//   // now simply use useEffect to fetch the chalet's data\n\n//   useEffect(() => {\n//     const fetchAbortController = new AbortController();\n//     const fetchSignal = fetchAbortController.signal;\n\n//     const fetchChaletDetails = async () => {\n//       try {\n//         // send an HTTP GET request to the get chalets route we defined in our Express REST API\n//         const response = await fetch(\n//           `http://localhost:5000/chalets/${chaletId}`,\n//           {\n//             signal: fetchSignal\n//           }\n//         );\n//         // parse the response content to JSON and store it into data variable\n//         const data = await response.json();\n\n//         // If there is an HTTP error (the response is NOT ok), throw the error message we get from the REST API.\n//         if (!response.ok) {\n//           // remember, in our REST API we return an error message in our response that has the key 'error'.\n//           throw Error(data.error);\n//         }\n\n//         // we now need to set our component state to the chalets we fetched\n//         setChalet(data.chalet);\n\n//         // after we set the chalets' state, let's set the loading state to false\n//         setIsLoading(false);\n//       } catch (err) {\n//         console.log(err.message);\n//       }\n//     };\n\n//     fetchChaletDetails();\n\n//     return () => {\n//       fetchAbortController.abort();\n//     };\n//   }, [chaletId]);\n\n//   if (isLoading) {\n//     return <h1>Please wait while loading chalet details...</h1>;\n//   }\n\n//   if (!chalet) {\n//     return <h1>Couldn't find chalet...</h1>;\n//   }\n\n//   return (\n//     // el chalet\n//     <div className=\"flex justify-center items-center w-screen gap-8 flex-wrap\">\n//       <div className=\"flex flex-col justify-center items-center gap-10 bg-sky-800 text-white py-16 min-w-[500px] rounded-3xl\">\n//         <h1 className=\"font-bold text-4xl\">{chalet.name}</h1>\n//         <img\n//           src={chalet.imgURL}\n//           alt={chalet.name}\n//           className=\"object-scale-down h-[300px] bg-white p-10 rounded-3xl\"\n//         />\n//         <p className=\"text-lg\">{chalet.description}</p>\n//         <h3 className=\"text-lg font-bold\"> {chalet.supplierId.name}</h3>\n//         <h3 className=\"text-lg font-bold\">{chalet.price} EGP</h3>\n//       </div>\n//       {/* 7eta elle ganb el porduct */}\n//       <div className=\"flex flex-col justify-center items-center gap-10 bg-sky-800 text-white py-16 min-w-[500px] rounded-3xl\">\n//         <h1 className=\"font-bold text-4xl\">{chalet.supplierId.name}</h1>\n//         <img\n//           src={chalet.supplierId.imgURL}\n//           alt={chalet.supplierId.name}\n//           className=\"object-scale-down h-[300px] bg-white p-10 rounded-3xl\"\n//         />\n//         <h2 className=\"text-lg\">{chalet.supplierId.email} EGP</h2>\n//         <h2 className=\"text-lg\">{chalet.supplierId.address}</h2>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChaletPage;","map":{"version":3,"names":[],"sources":["D:/University/BUE Year 3/Cloud Computing/Labs/react-products-demo/src/pages/ProdutPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const ChaletPage = () => {\r\n//   const [chalet, setChalet] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n\r\n//   // use the useParams hook in React Router to allow us to access dynamic segments in our dynamic route\r\n//   const params = useParams();\r\n//   // our dynamic segment was called chaletId, so we can access it as follows:\r\n//   const chaletId = params.chaletId;\r\n\r\n//   // now simply use useEffect to fetch the chalet's data\r\n\r\n//   useEffect(() => {\r\n//     const fetchAbortController = new AbortController();\r\n//     const fetchSignal = fetchAbortController.signal;\r\n\r\n//     const fetchChaletDetails = async () => {\r\n//       try {\r\n//         // send an HTTP GET request to the get chalets route we defined in our Express REST API\r\n//         const response = await fetch(\r\n//           `http://localhost:5000/chalets/${chaletId}`,\r\n//           {\r\n//             signal: fetchSignal\r\n//           }\r\n//         );\r\n//         // parse the response content to JSON and store it into data variable\r\n//         const data = await response.json();\r\n\r\n//         // If there is an HTTP error (the response is NOT ok), throw the error message we get from the REST API.\r\n//         if (!response.ok) {\r\n//           // remember, in our REST API we return an error message in our response that has the key 'error'.\r\n//           throw Error(data.error);\r\n//         }\r\n\r\n//         // we now need to set our component state to the chalets we fetched\r\n//         setChalet(data.chalet);\r\n\r\n//         // after we set the chalets' state, let's set the loading state to false\r\n//         setIsLoading(false);\r\n//       } catch (err) {\r\n//         console.log(err.message);\r\n//       }\r\n//     };\r\n\r\n//     fetchChaletDetails();\r\n\r\n//     return () => {\r\n//       fetchAbortController.abort();\r\n//     };\r\n//   }, [chaletId]);\r\n\r\n//   if (isLoading) {\r\n//     return <h1>Please wait while loading chalet details...</h1>;\r\n//   }\r\n\r\n//   if (!chalet) {\r\n//     return <h1>Couldn't find chalet...</h1>;\r\n//   }\r\n\r\n//   return (\r\n//     // el chalet\r\n//     <div className=\"flex justify-center items-center w-screen gap-8 flex-wrap\">\r\n//       <div className=\"flex flex-col justify-center items-center gap-10 bg-sky-800 text-white py-16 min-w-[500px] rounded-3xl\">\r\n//         <h1 className=\"font-bold text-4xl\">{chalet.name}</h1>\r\n//         <img\r\n//           src={chalet.imgURL}\r\n//           alt={chalet.name}\r\n//           className=\"object-scale-down h-[300px] bg-white p-10 rounded-3xl\"\r\n//         />\r\n//         <p className=\"text-lg\">{chalet.description}</p>\r\n//         <h3 className=\"text-lg font-bold\"> {chalet.supplierId.name}</h3>\r\n//         <h3 className=\"text-lg font-bold\">{chalet.price} EGP</h3>\r\n//       </div>\r\n//       {/* 7eta elle ganb el porduct */}\r\n//       <div className=\"flex flex-col justify-center items-center gap-10 bg-sky-800 text-white py-16 min-w-[500px] rounded-3xl\">\r\n//         <h1 className=\"font-bold text-4xl\">{chalet.supplierId.name}</h1>\r\n//         <img\r\n//           src={chalet.supplierId.imgURL}\r\n//           alt={chalet.supplierId.name}\r\n//           className=\"object-scale-down h-[300px] bg-white p-10 rounded-3xl\"\r\n//         />\r\n//         <h2 className=\"text-lg\">{chalet.supplierId.email} EGP</h2>\r\n//         <h2 className=\"text-lg\">{chalet.supplierId.address}</h2>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChaletPage;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}